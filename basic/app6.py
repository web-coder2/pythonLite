"""
3.8 Методы списков

Подвиг 3. Имеется список городов:

cities = ["Москва", "Казань", "Ярославль"]
Необходимо вставить во вторую позицию этого списка строку "Ульяновск" и вывести список командой:
print(*cities)

Sample Input:
Sample Output: Москва Ульяновск Казань Ярославль
"""

cities = ["Москва", "Казань", "Ярославль"]
cities.insert(1, "Ульяновск")
print(*cities)

"""
3.8 Методы списков

Подвиг 4. Вводится строка с номером телефона в формате:
+7(xxx)xxx-xx-xx
Необходимо преобразовать ее в список lst (посимвольно, то есть, элементами списка будут
являться отдельные символы строки). Затем, удалить первый '+', число 7 заменить на 8 и убрать дефисы.
Отобразить полученный список на экране командой:
print("".join(lst))

Sample Input: +7(912)123-45-67
Sample Output: 8(912)1234567
"""

phone = input("input phone >>> ")
phone_list = list(phone)
phone_list.pop(0)
phone_list[0] = "8"

for i in phone_list:
    if i == "-":
        phone_list.remove(i)

print("".join(phone_list))

"""
3.8 Методы списков

Подвиг 5. В одну строчку через пробел вводятся: имя, отчество и фамилия.
Необходимо представить эти данные в виде новой строки в формате:
Фамилия И.О. (Например, Сергей Михайлович Балакирев -> Балакирев С.М.).

Sample Input: Сергей Михайлович Балакирев
Sample Output: Балакирев С.М.
"""

one, two, three = input("input name, name2, name3 >>> ").split()
print(f"{three.upper()} {one[0].upper()}. {two[0].upper()}.")

"""
3.8 Методы списков

Подвиг 7. Вводятся целые числа в одну строчку через пробел (не менее четырех).
Необходимо найти три наименьших числа в этой последовательности чисел и
вывести их на экран в порядке возрастания. Реализовать программу без использования условного оператора.

Sample Input: 8 11 -5 10 -1 0 7
Sample Output: -5 -1 0
"""

numbers = list(map(int, input("input numbers >>> ").split()))
numbers.sort()
print(numbers[:3])

"""
3.8 Методы списков

Подвиг 8. Вводятся целые числа в одну строчку через пробел.
Необходимо преобразовать их в список lst , затем, удалить последнее значение и если оно нечетное,
то в список (в конец) добавить True, иначе - False. Отобразить полученный список на экране командой:
print(*lst)
Реализовать программу без использования условного оператора.

Sample Input: 8 11 0 3 5 6
Sample Output: 8 11 0 3 5 False
"""

lst = list(map(int, input("input numbers >>> ").split()))

if lst[-1] % 2 != 0:
    lst.pop(-1)
    lst.append(True)
else:
    lst.pop(-1)
    lst.append(False)

print(lst)

"""
3.8 Методы списков
Подвиг 10. Вводятся названия рек в одну строчку через пробел.
Необходимо все их отсортировать по именам (по возрастанию) и в отсортированном
списке удалить первый элемент. Результат отобразить на экране в одну строчку через пробел.

Sample Input: Лена Обь Волга Дон Енисей
Sample Output: Дон Енисей Лена Обь
"""

rivers = input("input rivers >>> ").split()
rivers.sort()
rivers.pop(0)

print(rivers)